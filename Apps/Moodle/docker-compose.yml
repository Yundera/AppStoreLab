name: moodle
services:
  mariadb:
    image: mariadb:10.11
    user: "999:999"  # MariaDB standard user
    environment:
      MYSQL_ROOT_PASSWORD: ${default_pwd}
      MYSQL_DATABASE: moodle
      MYSQL_USER: moodle_user
      MYSQL_PASSWORD: ${default_pwd}
      MYSQL_RANDOM_ROOT_PASSWORD: "no"
      MYSQL_ONETIME_PASSWORD: "no"
      TZ: ${TZ}
    volumes:
      - mariadb_data:/var/lib/mysql
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s
    networks:
      - moodle-network

  moodle:
    image: ellakcy/moodle:mysql_maria_apache_latest
    user: "0:0"  # Root required for initialization and permissions
    expose:
      - 80  # Use port 80 for clean NSL router URLs
    environment:
      # Database configuration
      MOODLE_DB_TYPE: "mariadb"
      MOODLE_DB_HOST: "mariadb"
      MOODLE_DB_USER: "moodle_user"
      MOODLE_DB_PASSWORD: ${default_pwd}
      MOODLE_DB_NAME: "moodle"
      
      # Admin configuration
      MOODLE_ADMIN: "admin"
      MOODLE_ADMIN_PASSWORD: ${default_pwd}
      MOODLE_ADMIN_EMAIL: "admin@example.com"
      
      # CRITICAL: URL and reverse proxy configuration
      # NSL router provides HTTPS at https://moodle-{username}.nsl.sh
      MOODLE_URL: "https://moodle-${domain}"
      MOODLE_REVERSE_LB: "false"  # Not behind traditional load balancer
      MOODLE_SSL: "true"  # HTTPS enabled by NSL router
      
      # System
      TZ: ${TZ}
    volumes:
      - moodle_data:/var/moodledata
    depends_on:
      mariadb:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 1024M
          cpus: '1.0'
    restart: unless-stopped
    networks:
      - moodle-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 300s  # 5 minutes for initial setup

volumes:
  mariadb_data:
    driver: local
  moodle_data:
    driver: local

networks:
  moodle-network:
    driver: bridge

x-casaos:
  architectures:
    - amd64
    - arm64
  main: moodle
  pre-install-cmd: |
    docker run --rm -v moodle_moodle_data:/data alpine sh -c "chmod -R 777 /data && echo 'Moodle data permissions fixed'"
  webui_port: 80  # Port 80 for clean NSL router URLs
  category: Education
  description:
    en_us: Moodle is the world's most popular open source learning management system (LMS). Used by universities, schools, and corporations worldwide, Moodle provides a robust platform for creating personalized e-learning environments with courses, assignments, quizzes, forums, wikis, and collaborative tools. Features drag-and-drop interfaces, role-based permissions, comprehensive reporting, multi-language support, and extensive plugin ecosystem.
    zh_cn: Moodle 是世界上最受欢迎的开源学习管理系统(LMS)。被全球的大学、学校和企业广泛使用,Moodle 提供了一个强大的平台,用于创建包含课程、作业、测验、论坛、维基和协作工具的个性化电子学习环境。
    es_es: Moodle es el sistema de gestión de aprendizaje (LMS) de código abierto más popular del mundo. Utilizado por universidades, escuelas y corporaciones en todo el mundo.
    fr_fr: Moodle est le système de gestion de l'apprentissage (LMS) open source le plus populaire au monde. Utilisé par les universités, les écoles et les entreprises du monde entier.
    ko_kr: Moodle은 세계에서 가장 인기 있는 오픈소스 학습 관리 시스템(LMS)입니다. 전 세계 대학, 학교, 기업에서 사용되며, 코스, 과제, 퀴즈, 포럼, 위키 및 협업 도구를 포함한 개인화된 e-러닝 환경을 만들기 위한 강력한 플랫폼을 제공합니다.
  tagline:
    en_us: Powerful open source learning platform for online education
    zh_cn: 用于在线教育的强大开源学习平台
    es_es: Poderosa plataforma de aprendizaje de código abierto para educación en línea
    fr_fr: Plateforme d'apprentissage open source puissante pour l'éducation en ligne
    ko_kr: 온라인 교육을 위한 강력한 오픈소스 학습 플랫폼
  title:
    en_us: Moodle™ LMS
  developer: Moodle HQ
  author: Yundera Team
  icon: https://cdn.jsdelivr.net/gh/Yundera/AppStoreLab@main/Apps/Moodle/icon.png
  screenshot_link:
    - https://cdn.jsdelivr.net/gh/Yundera/AppStoreLab@main/Apps/Moodle/screenshot-1.png
    - https://cdn.jsdelivr.net/gh/Yundera/AppStoreLab@main/Apps/Moodle/screenshot-2.png
    - https://cdn.jsdelivr.net/gh/Yundera/AppStoreLab@main/Apps/Moodle/screenshot-3.png
  thumbnail: https://cdn.jsdelivr.net/gh/Yundera/AppStoreLab@main/Apps/Moodle/thumbnail.png
  index: /
  scheme: https
  store_app_id: moodle
  tips:
    before_install:
      en_us: |
        ## Default Administrator Credentials
        | Username | Password |
        |----------|----------|
        | `admin` | `$default_pwd` |
        
        ## Important Notes
        - First installation may take 10-15 minutes
        - The application will be accessible via NSL router at `https://moodle-{username}.nsl.sh/`
        - Database is automatically configured and initialized
        - Using ellakcy/moodle image with built-in reverse proxy support
        - Port 80 provides clean URLs without port numbers
        
        ## Resource Requirements
        - Minimum 1GB RAM recommended
        - 2GB+ storage for initial installation
        - Additional storage based on course content
        
        ## Post-Installation
        1. Wait for both containers to show as healthy (10-15 minutes)
        2. Access via the NSL router URL
        3. Login with admin credentials above
        4. Configure email settings in Site administration
        5. Install additional plugins from Moodle directory
        6. Create courses and enroll users
        
        ## Troubleshooting
        - Check container logs: `docker logs moodle-moodle-1`
        - Both MariaDB and Moodle containers must be healthy
        - CSS and styling should load automatically with proper reverse proxy config
        - Named volumes automatically handle permissions